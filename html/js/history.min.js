var ____Class0=React.Component;for(var ____Class0____Key in ____Class0){if(____Class0.hasOwnProperty(____Class0____Key)){History[____Class0____Key]=____Class0[____Class0____Key];}}var ____SuperProtoOf____Class0=____Class0===null?null:____Class0.prototype;History.prototype=Object.create(____SuperProtoOf____Class0);History.prototype.constructor=History;History.__superConstructor__=____Class0;
  function History(props) {"use strict";
    ____Class0.call(this,props)
    this.state = {
      loading: false,
      list: [],
      text: '',
      result: null,
      err: false
    }
    'displayMain' in window.localStorage ? false : window.localStorage['displayMain'] = '1'
    'displayMini' in window.localStorage ? false : window.localStorage['displayMini'] = '0'
    this.searchRef = React.createRef()
  }

  Object.defineProperty(History.prototype,"componentDidMount",{writable:true,configurable:true,value:function( ) {"use strict";
    this.setState({loading: true})
    superagent
    .post('https://app.winds-n.com/web/concert')
    .end(function(err, res)  {
      if (err) return this.setState({loading: false, err: {type: 'networkError'}})
      this.setState({loading: false, list: res.body.list.reverse()})
    }.bind(this))
  }});

  Object.defineProperty(History.prototype,"updateSearch",{writable:true,configurable:true,value:function(text) {"use strict";
    this.setState({text:text})
    this.search(text)
  }});

  Object.defineProperty(History.prototype,"resetSearch",{writable:true,configurable:true,value:function( ) {"use strict";
    this.setState({text: '', result: null})
  }});

  Object.defineProperty(History.prototype,"escapeReg",{writable:true,configurable:true,value:function(string) {"use strict";
    const reRegExp = /[\\^$.*+?()[\]{}|]/g
    const reHasRegExp = new RegExp(reRegExp.source)
    return (string && reHasRegExp.test(string)) ? string.replace(reRegExp, '\\$&') : string
  }});

  Object.defineProperty(History.prototype,"search",{writable:true,configurable:true,value:function(value) {"use strict";
    if (value === '' || !value) return this.resetSearch()
    const result = this.state.list.map(function(item)  {
      const concert = item.detail
      return concert.data.map(function(track)  {
        const s = new RegExp(this.escapeReg(value), 'i')
        // 演奏会名で一致
        if (concert.title.search(s) >= 0) return {concert:concert, track:track}
        // タイトルで一致
        if (track.title.search(s) >= 0) return {concert:concert, track:track}
        // サブタイトルで一致
        // if (track.addtitle.search(s) >= 0) return {concert: concert, track}
        // 作曲者名で一致
        if ((track.composer ? track.composer : '').search(s) >= 0) return {concert:concert, track:track}
        // 編曲者名で一致
        if ((track.arranger ? track.arranger : '').search(s) >= 0) return {concert:concert, track:track}
      }.bind(this))
    }.bind(this))
    this.setState({result:result})
  }});

  Object.defineProperty(History.prototype,"reverseList",{writable:true,configurable:true,value:function( ) {"use strict";
    this.setState({list: this.state.list.reverse()})
  }});

  Object.defineProperty(History.prototype,"renderSearchResult",{writable:true,configurable:true,value:function( ) {"use strict";
    if (!this.state.result) return
    const resultList = this.state.result.map(function(item, i)  {
      if (!item) return // <div key={i}></div>
      return item.map(function(each, j)  {
        if (!each) return // <div key={i + j}></div>
        if (each.concert.type === 'other') return
        // const concertType = ' ' + each.concert.type
        // const composer = each.track.composer ? each.track.composer : ''
        const composer = each.track.composer ? each.track.arranger ? React.createElement("span", {className: "composer"}, each.track.composer, each.track.composer.match(/民謡/) ? '' : '作曲', React.createElement("span", null, "/"), each.track.arranger, "編曲") : React.createElement("span", {className: "composer"}, each.track.composer) : each.track.arranger ? React.createElement("span", {className: "composer"}, each.track.arranger, "編曲") : ''
        return (
          React.createElement("div", {key: i + j, className: "result-item"}, 
            React.createElement("div", {className: each.concert.type}, 
              React.createElement("span", {className: "concert-title"}, each.concert.title), 
              React.createElement("span", {className: "title"}, each.track.title), 
              composer
            )
          )
        )
      })
    })
    return (
      React.createElement("div", {className: "result-list"}, resultList)
    )
  }});

  Object.defineProperty(History.prototype,"labeling",{writable:true,configurable:true,value:function(label, contents) {"use strict";
    return React.createElement("div", {className: "item"}, React.createElement("label", null, label), React.createElement("div", null, contents))
  }});

  Object.defineProperty(History.prototype,"showDate",{writable:true,configurable:true,value:function(item) {"use strict";
    if (item.time['time'] && item.time['label']) {
      const time = React.createElement("div", null, React.createElement("div", null, item.time.date), React.createElement("div", null, item.time.time + item.time.label))
      return this.labeling('日時', time)
    }
    const date = React.createElement("div", null, item.time.date)
    return this.labeling('開催日', date)
  }});

  Object.defineProperty(History.prototype,"showPlace",{writable:true,configurable:true,value:function(item) {"use strict";
    if ('place' in item) {
      const place = item.place.map(function(each, i)  {
        return React.createElement("div", {key: i}, each)
      })
      return this.labeling('会場', place)
    }
  }});

  Object.defineProperty(History.prototype,"showConductor",{writable:true,configurable:true,value:function(item) {"use strict";
    if ('conductor' in item) {
      var name = ''
      for (var i in item.conductor) {
        name += item.conductor[i].name + '・'
      }
      return this.labeling('指揮', name.slice(0, -1))
    }
  }});

  Object.defineProperty(History.prototype,"showGuest",{writable:true,configurable:true,value:function(item) {"use strict";
    // ないときがある
    if (item['guest']) {
    // if ('guest' in item) {
      var list = ''
      for (var i in item.guest) {
        list = item.guest[i].name + '(' + item.guest[i].instrument + ')'
      }
      return this.labeling('客演', list)
    }
  }});

  Object.defineProperty(History.prototype,"showGuide",{writable:true,configurable:true,value:function(item) {"use strict";
    if ('guide' in item) {
      return React.createElement("div", {className: "item"}, React.createElement("div", {className: "guide"}, React.createElement("a", {href: item.guide}, "案内ページ")))
    }
  }});

  Object.defineProperty(History.prototype,"showMusic",{writable:true,configurable:true,value:function(item) {"use strict";
    var data = item.data
    return item.contents.map(function(list, i)  {
      var ml = list.music.map(function(ml, j)  {
        var composer = 'composer' in data[ml] ? 'arranger' in data[ml] ? React.createElement("span", {className: "composer"}, data[ml].composer, data[ml].composer.match(/民謡/) ? '' : '作曲', React.createElement("span", null, "/"), data[ml].arranger, "編曲") : React.createElement("span", {className: "composer"}, data[ml].composer) : 'arranger' in data[ml] ? React.createElement("span", {className: "composer"}, data[ml].arranger, "編曲") : ''
        var additional = 'add' in data[ml] ? React.createElement("ol", null, data[ml].add.map(function(mv, k)  {return React.createElement("li", {key: 'a' + item.id + k}, mv);})) : ''
        var movement = 'movement' in data[ml] ? React.createElement("ol", null, data[ml].movement.map(function(mv, k)  {return React.createElement("li", {key: 'a' + item.id + k}, mv);})) : ''
        return (
          React.createElement("li", {key: 'm' + item.id + j, className: "track"}, 
            React.createElement("div", null, React.createElement("span", null, data[ml].title), composer, additional, movement)
          )
        )
      })
      return React.createElement("li", {key: 'l' + item.id + i}, React.createElement("label", {className: list.label.match(/第[0-9]部/) ? '' : 'other'}, list.label), React.createElement("ol", null, ml))
    })
  }});

  Object.defineProperty(History.prototype,"renderConcertList",{writable:true,configurable:true,value:function( ) {"use strict";
    if (this.state.result) return
    return this.state.list.map(function(each, i)  {
      // if (each.type === 'main' && !this.props.displayMain) return
      // if (each.type === 'mini' && !this.props.displayMini) return
      // if (each.type === 'other' && !this.props.displayOther) return
      if (each.type === 'main' && window.localStorage.displayMain === '0') return
      if (each.type === 'mini' && window.localStorage.displayMini === '0') return
      if (each.type === 'other') return
      const poster = each.detail['poster'] ? React.createElement("img", {src: each.detail.poster}) : React.createElement("div", {className: "no-poster"}, React.createElement("div", null, React.createElement("span", null, "NO IMAGE")))
      return (
        React.createElement("details", {key: each.id + i, className: 'concert-item ' + each.type}, 
          React.createElement("summary", null, React.createElement("h2", null, each.detail.title)), 
          React.createElement("div", null, 
            React.createElement("div", {class: "detail"}, 
              React.createElement("div", {className: "poster"}, 
                poster
              ), 
              React.createElement("div", {className: 'overview ' + each.type}, 
                React.createElement("div", null, 
                  this.showDate(each.detail), 
                  this.showPlace(each.detail), 
                  this.showConductor(each.detail), 
                  this.showGuest(each.detail), 
                  this.showGuide(each.detail)
                ), 
                React.createElement("ol", {className: "music-list"}, this.showMusic(each.detail))
              )
            )
          )
        )
      )
    }.bind(this))
  }});

  Object.defineProperty(History.prototype,"toggleConcert",{writable:true,configurable:true,value:function(target) {"use strict";
    window.localStorage[target] = window.localStorage[target] === '1' ? '0' : '1'
    // 状態更新
    this.setState({})
  }});

  Object.defineProperty(History.prototype,"renderConcertButton",{writable:true,configurable:true,value:function( ) {"use strict";
    return (
      React.createElement("div", {className: "controller"}, 
        React.createElement("div", {className: 'switch main ' + (window.localStorage.displayMain === '1' ? 'on' : 'off'), onClick: function()  {return this.toggleConcert('displayMain');}.bind(this)}, "定期演奏会"), 
        React.createElement("div", {className: 'switch mini ' + (window.localStorage.displayMini === '1' ? 'on' : 'off'), onClick: function()  {return this.toggleConcert('displayMini');}.bind(this)}, "ミニコンサート")
      )
    )
  }});

  Object.defineProperty(History.prototype,"renderTopBar",{writable:true,configurable:true,value:function( ) {"use strict";
    const searchBarButtonClass = this.state.text ? 'search-bar-button' : 'search-bar-button hidden'
    const searchModeClass = this.state.text ? ' search-mode' : ''
    const concertButton = !this.state.text ? this.renderConcertButton() : false
    return (
      React.createElement("div", {className: 'search-bar' + searchModeClass}, 
        React.createElement("div", {className: "search-frame"}, 
          React.createElement("div", {className: "search-box"}, 
            React.createElement("div", {className: "search-bar-icon"}, React.createElement("i", {className: "fas fa-search"})), 
            React.createElement("input", {type: "text", value: this.state.text, onChange: function(e)  {return this.updateSearch(e.target.value);}.bind(this), ref: function(i)  {this.searchRef = i}.bind(this), placeholder: "検索"}), 
            React.createElement("div", {onClick: function()  {return this.resetSearch();}.bind(this), className: searchBarButtonClass}, React.createElement("i", {className: "fas fa-times-circle"}))
          )
        ), 
        concertButton
      )
    )
  }});

  Object.defineProperty(History.prototype,"renderNotice",{writable:true,configurable:true,value:function( ) {"use strict";
    if (window.localStorage['displayMain'] === '0' && window.localStorage['displayMini'] === '0') {
      return (
        React.createElement("div", {className: "notice"}, 
          React.createElement("i", {className: "fas fa-arrow-up"}), 
          React.createElement("span", null, "演奏会のジャンルを選んでください")
        )
      )
    } else {
      return React.createElement("div", {className: "notice"}, React.createElement("span", null, "これ以上はありません"))
    }
  }});

  Object.defineProperty(History.prototype,"render",{writable:true,configurable:true,value:function( ) {"use strict";
    const topBar = this.renderTopBar()
    if (this.state.loading || !this.state.list) {
      return (
        React.createElement(React.Fragment, null, 
          topBar, 
          React.createElement("div", {class: "loading"}, "読み込み中")
        )
      )
    }
    const concertList = this.renderConcertList()
    const searchResult = this.renderSearchResult()
    const notice = this.renderNotice()
    // const reverseButton = this.state.text ? false : <div onClick={() => this.reverseList()}>逆順にする</div>
    return (
      React.createElement(React.Fragment, null, 
        topBar, 
        /* {reverseButton} */
        concertList, 
        searchResult, 
        notice
      )
    )
  }});


ReactDOM.render(React.createElement(History), document.getElementById('history'))